package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;


import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;

@Tag("simple")
public class DoramaLiveTests extends TestBase {

    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("личный кабинет")
    void registrationTest() {
        String login = "marymary";
        String password ="marymary.kor@mail.ru";

            step("", () -> open("https://lord-s047.lordfilm0.org/"));
            step("войти в личный кабинет", () -> {
                $(".btn-login.btn.js-login.to-mob").click();
                $("#login_name").setValue(login);
                $("#login_password").setValue(password);
                $(".login-btn").click();

            });


    }


    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("меню сайта")
    void menuTest() {
        step("// меню сайта", () -> {
            open("https://lord-s047.lordfilm0.org/");
            $(By.xpath("//*[@id=\"header\"]/div/ul/li[1]/a")).click();
            $(By.xpath("//*[@id=\"header\"]/div/ul/li[2]/a")).click();
            $$(".hmenu.fx-row.to-mob").findBy(text("мультфильмы")).click();
            $(By.xpath("//*[@id=\"header\"]/div/ul/li[4]/a")).click();


        });

    }


    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("поиск фильма")
    void generatedTest() {


        step("поиск и добавления фильма в отложеные", () -> {
            open("https://lord-s047.lordfilm0.org/");
            $("#story").setValue("мы все мертвы").pressEnter();
            $(By.xpath("//*[@id=\"dle-content\"]/div[2]")).click();
            


        });

    }


    @Test
    @Description("Autogenerated test")
    @DisplayName("заголовок страницы должен содержать текст заголовка")
    void titleTest() {
        step("Open url 'https://doramalive.ru/'", () ->
            open("https://doramalive.ru/"));

        step("заголовок страницы должен содержать текст заголовка 'Дорамы смотреть онлайн на Dorama live'", () -> {
            String expectedTitle = "Дорамы смотреть онлайн на Dorama live";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }


    @Test
    @Description("Autogenerated test")
    @DisplayName("журнал консоли страницы не должен содержать ошибок")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://doramalive.ru/'", () ->
            open("https://doramalive.ru/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}